{"version":3,"sources":["felixhayashi/tiddlymap/js/services/Listener.js"],"names":["handleCancelDialog","param","setField","handleClearTiddler","paramObject","title","keep","tObj","getTiddler","originalFields","fields","fieldsToKeep","split","cloneFields","text","i","length","fieldName","$tw","wiki","deleteTiddler","addTiddler","Tiddler","handleMixTiddlers","tiddlersStringArray","tiddlers","output","utils","parseStringArray","getMergedTiddlers","handleConfirmDialog","handleSuppressDialog","dialog","suppress","isTrue","setEntry","$tm","ref","sysUserConf","handleDownloadGraph","view","graph","adapter","getGraph","nodes","convert","edges","tRef","JSON","stringify","rootWidget","dispatchEvent","type","filename","handleConfigureSystem","allTiddlers","getMatches","selector","allPotentialNodes","allEdges","getEdgesForSet","plugin","path","pluginRoot","meta","getTiddlerData","sysMeta","hasLiveTab","liveTab","hasTag","args","numberOfNodes","numberOfEdges","Object","keys","pluginVersion","version","dataStructureVersion","dataStructureState","preselects","getText","visUserConf","config","sys","dialogManager","open","isConfirmed","outTObj","getPropertiesByPrefix","setTiddlerData","handleGenerateWidget","options","misc","defaultViewLabel","handleRemoveEdge","deleteEdge","handleCreateEdge","from","to","isForce","force","tiddlerExists","edge","makeNode","id","label","insertEdge","notify","handleOpenTypeManager","mode","match","topic","allTypesSelector","allEdgeTypes","typeRootPath","edgeTypes","allNodeTypes","nodeTypes","searchSelector","dialogTObj","handleLoadTypeForm","outTRef","getInstance","save","usage","selectEdgesByType","count","fullPath","isShipped","vis","deleteByPrefix","handleSaveTypeForm","deleteType","saveType","dialogOutput","logger","_processEdgesWithType","action","removeNodeType","getTiddlerRef","Type","newId","newName","handleCreateType","name","platforms","after","before","synchronous","startup","addTWlisteners"],"mappings":"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","file":"../../../../../felixhayashi/tiddlymap/js/services/Listener.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/startup/listener\ntype: application/javascript\nmodule-type: startup\n\n@preserve\n\n\\*/\n\n/*** Imports *******************************************************/\n\nimport NodeType from '$:/plugins/felixhayashi/tiddlymap/js/NodeType';\nimport EdgeType from '$:/plugins/felixhayashi/tiddlymap/js/EdgeType';\nimport Edge from '$:/plugins/felixhayashi/tiddlymap/js/Edge';\nimport utils from '$:/plugins/felixhayashi/tiddlymap/js/utils';\nimport visDefConf from '$:/plugins/felixhayashi/tiddlymap/js/config/vis';\n\n/*** Code **********************************************************/\n\n/**\n * @param {Object} param - event.param\n */\nconst handleCancelDialog = ({param}) => {\n  utils.setField(param, 'text', '');\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleClearTiddler = ({paramObject} = {})  => {\n\n  const {title, keep} = paramObject;\n\n  if (!title) return;\n\n  const tObj = utils.getTiddler(title);\n  const originalFields = tObj ? tObj.fields : {};\n  const fieldsToKeep = keep ? keep.split() : [];\n  const cloneFields = {\n    title,\n    text: '' // see https://github.com/Jermolene/TiddlyWiki5/issues/2025\n  };\n\n  for (let i = fieldsToKeep.length; i--;) {\n    const fieldName = fieldsToKeep[i];\n    cloneFields[fieldName] = originalFields[fieldName];\n  }\n\n  $tw.wiki.deleteTiddler(title);\n  $tw.wiki.addTiddler(new $tw.Tiddler(cloneFields));\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleMixTiddlers = ({paramObject = {}}) => {\n\n  const {tiddlers: tiddlersStringArray, output} = paramObject;\n\n  if (!tiddlersStringArray || !output) return;\n\n  const tiddlers = $tw.utils.parseStringArray(tiddlersStringArray);\n  const tObj = utils.getMergedTiddlers(tiddlers, output);\n\n  $tw.wiki.addTiddler(tObj);\n\n};\n\n/**\n * @param {string} param - event.param\n */\nconst handleConfirmDialog = ({param}) => {\n\n  utils.setField(param, 'text', '1');\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleSuppressDialog = ({paramObject}) => {\n\n  const {dialog, suppress} = paramObject;\n\n  if (utils.isTrue(suppress, false)) {\n    utils.setEntry($tm.ref.sysUserConf, `suppressedDialogs.${dialog}`, true);\n  }\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleDownloadGraph = ({paramObject}) => {\n\n  const { view } = paramObject;\n  const graph = $tm.adapter.getGraph({ view });\n\n  graph.nodes = utils.convert(graph.nodes, 'array');\n  graph.edges = utils.convert(graph.edges, 'array');\n\n  const tRef = '$:/temp/tmap/export';\n\n  utils.setField(tRef, 'text', JSON.stringify(graph, null, 2));\n\n  $tw.rootWidget.dispatchEvent({\n    type: 'tm-download-file',\n    param: tRef,\n    paramObject: {\n      filename: `${view}.json`\n    }\n  });\n};\n\n/**\n *\n */\nconst handleConfigureSystem = () => {\n\n  const allTiddlers = utils.getMatches($tm.selector.allPotentialNodes);\n  const allEdges = $tm.adapter.getEdgesForSet(allTiddlers);\n  const plugin = $tw.wiki.getTiddler($tm.path.pluginRoot).fields;\n  const meta = $tw.wiki.getTiddlerData($tm.ref.sysMeta);\n  const hasLiveTab = utils.getTiddler($tm.ref.liveTab).hasTag('$:/tags/SideBar');\n\n  const args = {\n    numberOfNodes: '' + allTiddlers.length,\n    numberOfEdges: '' + Object.keys(allEdges).length,\n    pluginVersion: `v${plugin.version}`,\n    dataStructureVersion: `v${meta.dataStructureState}`,\n    dialog: {\n      preselects: {\n        'liveTab': '' + hasLiveTab,\n        'vis-inherited': JSON.stringify(visDefConf),\n        'config.vis': utils.getText($tm.ref.visUserConf),\n        'config.sys': $tm.config.sys,\n      }\n    }\n  };\n\n  $tm.dialogManager.open('globalConfig', args, (isConfirmed, outTObj) => {\n\n    if (!isConfirmed) return;\n\n    const config = utils.getPropertiesByPrefix(outTObj.fields, 'config.sys.', true);\n\n    // CAREFUL: this is a data tiddler!\n    $tw.wiki.setTiddlerData($tm.ref.sysUserConf, config);\n\n    // show or hide the live tab; to hide the live tab, we override\n    // the shadow tiddler; to show it, we remove the overlay again.\n    if (utils.isTrue(outTObj.fields.liveTab, false)) {\n      utils.setField($tm.ref.liveTab, 'tags', '$:/tags/SideBar');\n    } else {\n      $tw.wiki.deleteTiddler($tm.ref.liveTab);\n    }\n\n    // tw doesn't translate the json to an object so this is already a string\n    utils.setField($tm.ref.visUserConf, 'text', outTObj.fields['config.vis']);\n\n  });\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleGenerateWidget = ({paramObject = {}}) => {\n\n  const options = {\n    dialog: {\n      preselects: {\n        'var.view': (paramObject.view || $tm.misc.defaultViewLabel)\n      }\n    }\n  };\n\n  $tm.dialogManager.open('widgetCodeGenerator', options);\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleRemoveEdge = ({paramObject}) => {\n\n  $tm.adapter.deleteEdge(paramObject);\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleCreateEdge = ({paramObject}) => {\n\n  const {from, to, force: isForce} = paramObject;\n\n  if (!from || !to) return;\n\n  if ((utils.tiddlerExists(from) && utils.tiddlerExists(to)) || isForce) {\n\n    // will not override any existing tiddlers…\n    utils.addTiddler(to);\n    utils.addTiddler(from);\n\n    const edge = new Edge(\n      $tm.adapter.makeNode(from).id,\n      $tm.adapter.makeNode(to).id,\n      paramObject.label,\n      paramObject.id\n    );\n\n    $tm.adapter.insertEdge(edge);\n    $tm.notify('Edge inserted');\n\n  }\n\n};\n\n/**\n * @param {string} type - event.type\n * @param {Object} [paramObject] - event.paramObject\n */\nconst handleOpenTypeManager = ({type, paramObject = {}}) => {\n\n  // either 'manage-edge-types' or 'manage-node-types'\n  const mode = type.match(/tmap:tm-(.*)/)[1];\n\n  if (mode === 'manage-edge-types') {\n    var topic = 'Edge-Type Manager';\n    var allTypesSelector = $tm.selector.allEdgeTypes;\n    var typeRootPath = $tm.path.edgeTypes;\n  } else {\n    var topic = 'Node-Type Manager';\n    var allTypesSelector = $tm.selector.allNodeTypes;\n    var typeRootPath = $tm.path.nodeTypes;\n  }\n\n  const args = {\n    mode: mode,\n    topic: topic,\n    searchSelector: allTypesSelector,\n    typeRootPath: typeRootPath\n  };\n\n  const dialogTObj = $tm.dialogManager.open('MapElementTypeManager', args);\n\n  if (paramObject.type) {\n    handleLoadTypeForm({\n      paramObject: {\n        mode: mode,\n        id: paramObject.type,\n        output: dialogTObj.fields['output']\n      }\n    });\n  }\n\n};\n\n/**\n * @param {string} id - The id of a {@link MapElementType}\n * @param {('manage-edge-types'|'manage-node-types')} mode\n * @param {TiddlerReference} output\n */\nconst handleLoadTypeForm = ({ paramObject: { mode, id, output } }) => {\n\n  const outTRef = output;\n  const type = (mode === 'manage-edge-types' ? EdgeType.getInstance(id) : NodeType.getInstance(id));\n\n  // inject all the type data as fields into the dialog output\n  type.save(outTRef, true);\n\n  // fields that need preprocessing\n\n  if (mode === 'manage-edge-types') {\n    const usage = $tm.adapter.selectEdgesByType(type);\n    const count = Object.keys(usage).length;\n    utils.setField(outTRef, 'temp.usageCount', count);\n  }\n\n  $tw.wiki.addTiddler(new $tw.Tiddler(\n    utils.getTiddler(outTRef),\n    {\n      'typeTRef': type.fullPath,\n      'temp.idImmutable': (type.isShipped ? 'true' : ''),\n      'temp.newId': type.id,\n      'vis-inherited': JSON.stringify($tm.config.vis)\n    }\n  ));\n\n  // reset the tabs to default\n  utils.deleteByPrefix('$:/state/tabs/MapElementTypeManager');\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleSaveTypeForm = ({paramObject}) => {\n\n  const tObj = utils.getTiddler(paramObject.output);\n  if (!tObj) return;\n\n  const id = tObj.fields.id;\n  const mode = paramObject.mode;\n\n  if (utils.isTrue(tObj.fields['temp.deleteType'], false)) {\n    deleteType(mode, id, tObj);\n  } else {\n    saveType(mode, id, tObj);\n  }\n\n};\n\nconst deleteType = (mode, id, dialogOutput) => {\n\n  const type = (mode === 'manage-edge-types' ? EdgeType.getInstance(id) : NodeType.getInstance(id));\n\n  $tm.logger('debug', 'Deleting type', type);\n\n  if (mode === 'manage-edge-types') {\n    $tm.adapter._processEdgesWithType(type, {action: 'delete'});\n  } else {\n    $tm.adapter.removeNodeType(type);\n  }\n\n  $tw.wiki.addTiddler(new $tw.Tiddler({\n    title: utils.getTiddlerRef(dialogOutput)\n  }));\n\n  $tm.notify('Deleted type');\n\n};\n\n/**\n * @param {string} id - The id of a {@link MapElementType}\n * @param {('manage-edge-types'|'manage-node-types')} mode\n * @param {TiddlerReference} output\n */\nconst saveType = (mode, id, output) => {\n\n  const tObj = utils.getTiddler(output);\n\n  // update the type with the form data\n  const Type = (mode === 'manage-edge-types' ? EdgeType : NodeType);\n  const type = new Type(id, tObj);\n  type.save();\n\n  const newId = tObj.fields['temp.newId'];\n\n  if (newId && newId !== tObj.fields['id']) { //renamed\n\n    if (mode === 'manage-edge-types') {\n\n      $tm.adapter._processEdgesWithType(type, {\n        action: 'rename',\n        newName: newId\n      });\n\n    } else {\n\n      (new NodeType(newId, type)).save();\n      $tw.wiki.deleteTiddler(type.fullPath);\n\n    }\n\n    utils.setField(tObj, 'id', newId);\n\n  }\n\n  $tm.notify('Saved type data');\n\n};\n\n/**\n * @param {string} id - The id of a {@link MapElementType}\n * @param {('manage-edge-types'|'manage-node-types')} mode\n * @param {TiddlerReference} output\n */\nconst handleCreateType = ({ paramObject: { mode, id = 'New type', output } }) => {\n\n  const type = (mode === 'manage-edge-types' ? new EdgeType(id) : new NodeType(id));\n\n  type.save();\n\n  handleLoadTypeForm({ paramObject: { id: type.id, mode, output } });\n\n};\n\n/*** Exports *******************************************************/\n\nexport const name = 'tmap.listener';\nexport const platforms = [ 'browser' ];\nexport const after = [ 'rootwidget', 'tmap.caretaker' ];\nexport const before = [ 'story' ];\nexport const synchronous = true;\nexport const startup = () => {\n  utils.addTWlisteners({\n    'tmap:tm-remove-edge': handleRemoveEdge,\n    'tmap:tm-load-type-form': handleLoadTypeForm,\n    'tmap:tm-save-type-form': handleSaveTypeForm,\n    'tmap:tm-create-type': handleCreateType,\n    'tmap:tm-create-edge': handleCreateEdge,\n    'tmap:tm-suppress-dialog': handleSuppressDialog,\n    'tmap:tm-generate-widget': handleGenerateWidget,\n    'tmap:tm-download-graph': handleDownloadGraph,\n    'tmap:tm-configure-system': handleConfigureSystem,\n    'tmap:tm-manage-edge-types': handleOpenTypeManager,\n    'tmap:tm-manage-node-types': handleOpenTypeManager,\n    'tmap:tm-cancel-dialog': handleCancelDialog,\n    'tmap:tm-clear-tiddler': handleClearTiddler,\n    'tmap:tm-merge-tiddlers': handleMixTiddlers,\n    'tmap:tm-confirm-dialog': handleConfirmDialog\n  }, $tw.rootWidget, this);\n};\n"],"sourceRoot":"../../../../../../src/plugins"}