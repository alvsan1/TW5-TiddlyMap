{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/SelectionRectangle.js"],"names":["SelectionRectangle","x","y","x1","x2","y1","y2","getWidth","getHeight","mostLeft","Math","min","mostRight","max","mostBottom","mostTop"],"mappings":";;;;;;;;;;AAAA;AACA;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;;;;IAaMA,kB;;AAEJ;;;;;;AAMA,8BAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAAA;;AAEhB,SAAKC,EAAL,GAAUF,CAAV;AACA,SAAKG,EAAL,GAAUH,CAAV;;AAEA,SAAKI,EAAL,GAAUH,CAAV;AACA,SAAKI,EAAL,GAAUJ,CAAV;AAED;;AAED;;;;;;;;;;yBAMKD,C,EAAGC,C,EAAG;;AAET,WAAKE,EAAL,GAAUH,CAAV;AACA,WAAKK,EAAL,GAAUJ,CAAV;AAED;;AAED;;;;;;+BAGW;;AAET,aAAO,KAAKE,EAAL,GAAU,KAAKD,EAAtB;AAED;;AAED;;;;;;gCAGY;;AAEV,aAAO,KAAKG,EAAL,GAAU,KAAKD,EAAtB;AAED;;AAED;;;;;;8BAGU;;AAER,aAAO,CAAE,KAAKF,EAAP,EAAW,KAAKE,EAAhB,EAAoB,KAAKE,QAAL,EAApB,EAAqC,KAAKC,SAAL,EAArC,CAAP;AAED;;AAED;;;;;;;;wCAKwB;AAAA,UAARP,CAAQ,QAARA,CAAQ;AAAA,UAALC,CAAK,QAALA,CAAK;AAAA,UAEdC,EAFc,GAEK,IAFL,CAEdA,EAFc;AAAA,UAEVC,EAFU,GAEK,IAFL,CAEVA,EAFU;AAAA,UAENC,EAFM,GAEK,IAFL,CAENA,EAFM;AAAA,UAEFC,EAFE,GAEK,IAFL,CAEFA,EAFE;;;AAItB,UAAMG,WAAWC,KAAKC,GAAL,CAASR,EAAT,EAAaC,EAAb,CAAjB;AACA,UAAMQ,YAAYF,KAAKG,GAAL,CAASV,EAAT,EAAaC,EAAb,CAAlB;AACA,UAAMU,aAAaJ,KAAKC,GAAL,CAASN,EAAT,EAAaC,EAAb,CAAnB;AACA,UAAMS,UAAUL,KAAKG,GAAL,CAASR,EAAT,EAAaC,EAAb,CAAhB;;AAEA,aAAOG,WAAWR,CAAX,IAAgBA,IAAIW,SAApB,IAAiCE,aAAaZ,CAA9C,IAAmDA,IAAIa,OAA9D;AAED;;;;;;AAGH;;kBAEef,kB","file":"../../../../../felixhayashi/tiddlymap/js/lib/SelectionRectangle.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/lib/SelectionRectangle\ntype: application/SelectionRectangle\nmodule-type: library\n\n@preserve\n\n\\*/\n\n/**** Code *********************************************************/\n\n/**\n * Represents a rectangle spanned by mouse selection\n *\n * @constructor\n *\n * @param {Element} [parentDomNode] - The popup container. The\n *    popup will create itself in this container.\n * @param {Hashmap} [options] - An options object.\n * @param {string} [options.className] - A classname to be added to\n *    the popup div.\n * @param {int} [options.delay] - The default delay for the popup\n *    show and hide.\n */\nclass SelectionRectangle {\n\n  /**\n   * Sets up the selection with the specified initial offset.\n   *\n   * @param {number} x - offset x\n   * @param {number} y - offset y\n   */\n  constructor(x, y) {\n\n    this.x1 = x;\n    this.x2 = x;\n\n    this.y1 = y;\n    this.y2 = y;\n\n  }\n\n  /**\n   * Spans the selection.\n   *\n   * @param {number} x - x coordinate\n   * @param {number} y - y coordinate\n   */\n  span(x, y) {\n\n    this.x2 = x;\n    this.y2 = y;\n\n  }\n\n  /**\n   * @return {number} width\n   */\n  getWidth() {\n\n    return this.x2 - this.x1;\n\n  }\n\n  /**\n   * @return {number} height\n   */\n  getHeight() {\n\n    return this.y2 - this.y1;\n\n  }\n\n  /**\n   * @return {array} an array holding the following data in sequence: x, y, width, height\n   */\n  getRect() {\n\n    return [ this.x1, this.y1, this.getWidth(), this.getHeight() ];\n\n  }\n\n  /**\n   * @param {number} x - x coordinate\n   * @param {number} y - y coordinate\n   * @return {boolean}\n   */\n  isPointWithin({ x, y} ) {\n\n    const { x1, x2, y1, y2 } = this;\n\n    const mostLeft = Math.min(x1, x2);\n    const mostRight = Math.max(x1, x2);\n    const mostBottom = Math.min(y1, y2);\n    const mostTop = Math.max(y1, y2);\n\n    return mostLeft < x && x < mostRight && mostBottom < y && y < mostTop;\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport default SelectionRectangle;\n"],"sourceRoot":"../../../../../../src/plugins"}