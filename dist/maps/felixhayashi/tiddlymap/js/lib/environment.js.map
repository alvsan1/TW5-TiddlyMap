{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/environment.js"],"names":["path","pluginRoot","edgeTypes","nodeTypes","views","options","dialogs","footers","tempRoot","tempStates","tempPopups","localHolders","ref","defaultViewHolder","graphBar","sysUserConf","visUserConf","welcomeFlag","focusButton","sysMeta","liveTab","mainEditor","sidebarBreakpoint","misc","unknownEdgeLabel","liveViewLabel","defaultViewLabel","mainEditorId","arrows","config","sys","field","nodeLabel","nodeIcon","nodeInfo","viewMarker","fallbackView","suppressedDialogs","edgeClickBehaviour","debug","notifications","popups","enabled","delay","width","height","jsonIndentation","editNodeOnCreate","singleClickMode","editorMenuBar","showNeighScopeButton","showRasterMenuButton","showScreenshotButton","filter","defaultEdgeTypeFilter","allSelector","s","allEdgeTypes","allNodeTypes","allViews","allPotentialNodes","selector","allEdgeTypesById","allNodeTypesById","allViewsByLabel"],"mappings":";;;;;;;;AAAA;AACA;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;;AAWA;AACO,IAAMA,sBAAO;AAClBC,cAAiB,mCADC;AAElBC,aAAiB,mDAFC;AAGlBC,aAAiB,mDAHC;AAIlBC,SAAiB,+CAJC;AAKlBC,WAAiB,0CALC;AAMlBC,WAAiB,0CANC;AAOlBC,WAAiB,gDAPC;AAQlBC,YAAiB,cARC;AASlBC,cAAiB,oBATC;AAUlBC,cAAiB,0BAVC;AAWlBC,gBAAiB;AAXC,CAAb;;AAcP;AACO,IAAMC,oBAAM;AACjBC,qBAAoB,0DADH;AAEjBC,YAAoB,0DAFH;AAGjBC,eAAoB,mDAHH;AAIjBC,eAAoB,mDAJH;AAKjBC,eAAoB,gDALH;AAMjBC,eAAoB,oDANH;AAOjBC,WAAoB,6CAPH;AAQjBC,WAAoB,gDARH;AASjBC,cAAoB,+CATH;AAUjBC,qBAAoB;AAVH,CAAZ;;AAaP;AACO,IAAMC,sBAAO;AAClB;AACAC,oBAAkB,gBAFA;AAGlBC,iBAAe,WAHG;AAIlBC,oBAAkB,SAJA;AAKlBC,gBAAc,aALI;AAMlBC,UAAQ,EAAE,MAAM,GAAR,EAAa,OAAO,GAApB,EAAyB,MAAM,GAA/B;AANU,CAAb;;AASA,IAAMC,0BAAS;AACpBC,OAAK;AACHC,WAAO;AACLC,iBAAW,SADN;AAELC,gBAAU,MAFL;AAGLC,gBAAU,aAHL;AAILC,kBAAY;AAJP,KADJ;AAOHf,aAAS;AACPgB,oBAAcb,KAAKE;AADZ,KAPN;AAUHY,uBAAmB,EAVhB;AAWHC,wBAAoB,SAXjB;AAYHC,WAAO,OAZJ;AAaHC,mBAAe,MAbZ;AAcHC,YAAQ;AACNC,eAAS,MADH;AAENC,aAAO,KAFD;AAGNC,aAAO,OAHD;AAINC,cAAQ;AAJF,KAdL;AAoBHC,qBAAiB,GApBd;AAqBHC,sBAAkB,OArBf;AAsBHC,qBAAiB,OAtBd;AAuBHC,mBAAe;AACbC,4BAAsB,MADT;AAEbC,4BAAsB,MAFT;AAGbC,4BAAsB;AAHT;AAvBZ;AADe,CAAf;;AAgCP;AACO,IAAMC,0BAAS;AACpBlD,0BAAsBH,KAAKG,SAA3B,OADoB;AAEpBD,0BAAsBF,KAAKE,SAA3B,OAFoB;AAGpBE,eAAWyB,OAAOC,GAAP,CAAWC,KAAX,CAAiBI,UAA5B,YAHoB;AAIpBmB,yBAAuB;AAJH,CAAf;;AAOP,IAAMC,cAAc,uCAApB;;AAEA;AACA;;AAEA,IAAMC,IAAI;AACRC,gBAAiBF,WAAjB,UAAiCF,OAAOnD,SADhC;AAERwD,gBAAiBH,WAAjB,UAAiCF,OAAOlD,SAFhC;AAGRwD,YAAaJ,WAAb,UAA6BF,OAAOjD,KAH5B;AAIRwD,qBAAmB;AAJX,CAAV;;AAOO,IAAMC,2CACRL,CADQ;AAEXM,oBAAqBN,EAAEC,YAAvB,wBAAsDzD,KAAKE,SAA3D,QAFW;AAGX6D,oBAAqBP,EAAEE,YAAvB,wBAAsD1D,KAAKG,SAA3D,QAHW;AAIX6D,mBAAoBR,EAAEG,QAAtB,wBAAiD3D,KAAKI,KAAtD;AAJW,EAAN","file":"../../../../../felixhayashi/tiddlymap/js/lib/environment.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/lib/environment\ntype: application/javascript\n module-type: library\n\n@preserve\n\n\\*/\n\n/*** Code **********************************************************/\n\n/**\n * This module is responsible for registering a global namespace\n * under $tw and registering fundamental path variables.\n *\n * Everything that doesn't change when the global config object is\n * updated. This includes prefixes (paths) and tiddler titles.\n *\n * ATTENTION: The paths are deliberately written in full so they\n * are discovered when a search is performed over the TiddlyMap code.\n */\n\n// **ATTENTION: NO TRAILING SLASHES IN PATHS EVER**\nexport const path = {\n  pluginRoot:      '$:/plugins/felixhayashi/tiddlymap',\n  edgeTypes:       '$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes',\n  nodeTypes:       '$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes',\n  views:           '$:/plugins/felixhayashi/tiddlymap/graph/views',\n  options:         '$:/plugins/felixhayashi/tiddlymap/config',\n  dialogs:         '$:/plugins/felixhayashi/tiddlymap/dialog',\n  footers:         '$:/plugins/felixhayashi/tiddlymap/dialogFooter',\n  tempRoot:        '$:/temp/tmap',\n  tempStates:      '$:/temp/tmap/state',\n  tempPopups:      '$:/temp/tmap/state/popup',\n  localHolders:    '$:/temp/tmap/holders'\n};\n\n// static references to important tiddlers\nexport const ref = {\n  defaultViewHolder:  '$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder',\n  graphBar:           '$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar',\n  sysUserConf:        '$:/plugins/felixhayashi/tiddlymap/config/sys/user',\n  visUserConf:        '$:/plugins/felixhayashi/tiddlymap/config/vis/user',\n  welcomeFlag:        '$:/plugins/felixhayashi/tiddlymap/flag/welcome',\n  focusButton:        '$:/plugins/felixhayashi/tiddlymap/misc/focusButton',\n  sysMeta:            '$:/plugins/felixhayashi/tiddlymap/misc/meta',\n  liveTab:            '$:/plugins/felixhayashi/tiddlymap/hook/liveTab',\n  mainEditor:         '$:/plugins/felixhayashi/tiddlymap/hook/editor',\n  sidebarBreakpoint:  '$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint'\n};\n\n// some other options\nexport const misc = {\n  // if no edge label is specified, this is used as label\n  unknownEdgeLabel: 'tmap:undefined',\n  liveViewLabel: 'Live View',\n  defaultViewLabel: 'Default',\n  mainEditorId: 'main_editor',\n  arrows: { 'in': '⇦', 'out': '➡', 'bi': '⇄' }\n};\n\nexport const config = {\n  sys: {\n    field: {\n      nodeLabel: 'caption',\n      nodeIcon: 'icon',\n      nodeInfo: 'description',\n      viewMarker: 'isview'\n    },\n    liveTab: {\n      fallbackView: misc.liveViewLabel\n    },\n    suppressedDialogs: {},\n    edgeClickBehaviour: 'manager',\n    debug: 'false',\n    notifications: 'true',\n    popups: {\n      enabled: 'true',\n      delay: '600',\n      width: '240px',\n      height: '140px'\n    },\n    jsonIndentation: '1',\n    editNodeOnCreate: 'false',\n    singleClickMode: 'false',\n    editorMenuBar: {\n      showNeighScopeButton: 'true',\n      showRasterMenuButton: 'true',\n      showScreenshotButton: 'true'\n    }\n  }\n};\n\n// some popular filters\nexport const filter = {\n  nodeTypes: `[prefix[${path.nodeTypes}]]`,\n  edgeTypes: `[prefix[${path.edgeTypes}]]`,\n  views: `[${config.sys.field.viewMarker}[true]]`,\n  defaultEdgeTypeFilter: '-[prefix[_]] -[[tw-body:link]] -[[tw-list:tags]] -[[tw-list:list]]'\n};\n\nconst allSelector = '[all[tiddlers+shadows]!has[draft.of]]';\n\n// some popular selectors\n// usually used from within tiddlers via the tmap macro\n\nconst s = {\n  allEdgeTypes: `${allSelector} +${filter.edgeTypes}`,\n  allNodeTypes: `${allSelector} +${filter.nodeTypes}`,\n  allViews: `${allSelector} +${filter.views}`,\n  allPotentialNodes: '[all[tiddlers]!is[system]!has[draft.of]]',\n};\n\nexport const selector = {\n  ...s,\n  allEdgeTypesById: `${s.allEdgeTypes} +[removeprefix[${path.edgeTypes}/]]`,\n  allNodeTypesById: `${s.allNodeTypes} +[removeprefix[${path.nodeTypes}/]]`,\n  allViewsByLabel: `${s.allViews} +[removeprefix[${path.views}/]]`,\n};\n"],"sourceRoot":"../../../../../../src/plugins"}