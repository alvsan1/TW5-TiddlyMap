{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/exceptions.js"],"names":["TiddlyMapError","message","payload","Error","EnvironmentError","aspect","DependencyError","dep","MissingOverrideError","context","methodName","constructor","name","ResourceNotFoundException","resourceType","InvalidArgumentException"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;;AAUA;;;IAGMA,c;;;AAEJ;;;;;AAKA,0BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA,gIACtBD,OADsB;;AAE5B,UAAKC,OAAL,GAAeA,OAAf;AAF4B;AAG7B;;;;iCAEY;AACX,aAAO,KAAKA,OAAZ;AACD;;;;EAd0BC,K;;AAkB7B;;;;;IAGaC,gB,WAAAA,gB;;;AACX,4BAAYC,MAAZ,EAAoB;AAAA;;AAAA,qLACwCA,MADxC;AAEnB;;;EAHmCL,c;;AAMtC;;;;;IAGaM,e,WAAAA,e;;;AACX,2BAAYC,GAAZ,EAAiB;AAAA;;AAAA,kKAC0BA,GAD1B;AAEhB;;;EAHkCP,c;;AAMrC;;;;;IAGaQ,oB,WAAAA,oB;;;AACX,gCAAYC,OAAZ,EAAqBC,UAArB,EAAiC;AAAA;;AAAA,uIACtBD,QAAQE,WAAR,CAAoBC,IADE,mCACgCF,UADhC;AAEhC;;;EAHuCV,c;;AAM1C;;;;;;IAIaa,yB,WAAAA,yB;;;AAEX;;;;AAIA,qCAAYC,YAAZ,EAAsC;AAAA;;AAAA,sCAATZ,OAAS;AAATA,aAAS;AAAA;;AAAA,qKACZY,YADY,EACIZ,OADJ;AAErC;;;EAR4CF,c;;AAY/C;;;;;;IAIae,wB,WAAAA,wB;;;AACX,sCAAwB;AAAA;;AAAA,uCAATb,OAAS;AAATA,aAAS;AAAA;;AAAA,+IAChB,sCADgB,EACwBA,OADxB;AAEvB;;;EAH2CF,c","file":"../../../../../felixhayashi/tiddlymap/js/lib/exceptions.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/exception\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n\n/**\n * Base class for all Exceptions in TiddlyMap\n */\nclass TiddlyMapError extends Error {\n\n  /**\n   *\n   * @param {string} message\n   * @param {array} payload\n   */\n  constructor(message, payload) {\n    super(message);\n    this.payload = payload;\n  }\n\n  getPayload() {\n    return this.payload;\n  }\n\n}\n\n/**\n * Thrown if a css or dom structure is not present but was expected by TiddlyMap.\n */\nexport class EnvironmentError extends TiddlyMapError {\n  constructor(aspect) {\n    super(`Critical parts of the underlying system changed: ${aspect}`);\n  };\n}\n\n/**\n * Thrown if a plugin or any other kind of required dependency is missing.\n */\nexport class DependencyError extends TiddlyMapError {\n  constructor(dep) {\n    super(`TiddlyMap cannot run without: : ${dep}`);\n  };\n}\n\n/**\n * Thrown if an interface method is not fully implemented.\n */\nexport class MissingOverrideError extends TiddlyMapError {\n  constructor(context, methodName) {\n    super(`${context.constructor.name} does not override method \"${methodName}\"`);\n  };\n}\n\n/**\n * Thrown if a resource such as a node, edge, view, tiddler etc. cannot be located\n * in the system.\n */\nexport class ResourceNotFoundException extends TiddlyMapError {\n\n  /**\n   * @param {string} resourceType\n   * @param {*} payload\n   */\n  constructor(resourceType, ...payload) {\n    super(`Cannot resolve ${resourceType}`, payload);\n  };\n\n}\n\n/**\n * Thrown if a resource such as a node, edge, view, tiddler etc. cannot be located\n * in the system.\n */\nexport class InvalidArgumentException extends TiddlyMapError {\n  constructor(...payload) {\n    super('Invalid or missing argument provided', payload);\n  };\n}\n"],"sourceRoot":"../../../../../../src/plugins"}