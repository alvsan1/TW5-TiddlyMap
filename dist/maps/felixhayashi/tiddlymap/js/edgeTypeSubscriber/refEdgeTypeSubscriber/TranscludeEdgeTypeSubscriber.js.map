{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/TranscludeEdgeTypeSubscriber.js"],"names":["TranscludeEdgeTypeSubscriber","allEdgeTypes","options","priority","ignore","$tw","wiki","getTiddlerTranscludes","edgeType","id","tObj","toWL","typeWL","toRefs","fields","title","length"],"mappings":";;;;;;;;;;;AAWA;;;;;;;;;;+eAXA;AACA;;;;;;;;;;AAYA;;;;;;IAMMA,4B;;;AAEJ;;;AAGA,wCAAYC,YAAZ,EAAwC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAAA,uJAChCD,YADgC;AAEpCE,gBAAU,EAF0B;AAGpCC,cAAS,OAAOC,IAAIC,IAAJ,CAASC,qBAAhB,KAA0C;AAHf,OAIjCL,OAJiC;AAMvC;;AAED;;;;;;;8BAGUM,Q,EAAU;;AAElB,aAAOA,SAASC,EAAT,KAAgB,oBAAvB;AAED;;AAED;;;;;;kCAGcC,I,EAAMC,I,EAAMC,M,EAAQ;;AAEhC,UAAIA,UAAU,CAACA,OAAO,oBAAP,CAAf,EAA6C;AAC3C;AACD;;AAED,UAAIC,SAASR,IAAIC,IAAJ,CAASC,qBAAT,CAA+BG,KAAKI,MAAL,CAAYC,KAA3C,CAAb;;AAEA,UAAI,CAACF,MAAD,IAAW,CAACA,OAAOG,MAAvB,EAA+B;AAC7B;AACD;;AAED,aAAO,EAAE,sBAAsBH,MAAxB,EAAP;AAED;;;;;;AAGH;;QAESb,4B,GAAAA,4B","file":"../../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/TranscludeEdgeTypeSubscriber.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/modules/edge-type-handler/body/transclude\ntype: application/javascript\nmodule-type: tmap.edgetypehandler\n\n@preserve\n\n\\*/\n\nimport AbstractRefEdgeTypeSubscriber from '$:/plugins/felixhayashi/tiddlymap/js/AbstractRefEdgeTypeSubscriber';\n\n/**\n * The TranscludeEdgeTypeSubscriber retrieves connections that result tiddler transclusions.\n *\n * Note: This subscriber only retrieves edges, however doesn't store or delete them. It only\n * works if the `$tw.wiki.getTiddlerTranscludes` method is present in the wiki.\n */\nclass TranscludeEdgeTypeSubscriber extends AbstractRefEdgeTypeSubscriber {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(allEdgeTypes, options = {}) {\n    super(allEdgeTypes, {\n      priority: 20,\n      ignore: (typeof $tw.wiki.getTiddlerTranscludes !== 'function'),\n      ...options,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canHandle(edgeType) {\n\n    return edgeType.id === 'tw-body:transclude';\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReferences(tObj, toWL, typeWL) {\n\n    if (typeWL && !typeWL['tw-body:transclude']) {\n      return;\n    }\n\n    var toRefs = $tw.wiki.getTiddlerTranscludes(tObj.fields.title);\n\n    if (!toRefs || !toRefs.length) {\n      return;\n    }\n\n    return { 'tw-body:transclude': toRefs };\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport { TranscludeEdgeTypeSubscriber };\n"],"sourceRoot":"../../../../../../../src/plugins"}