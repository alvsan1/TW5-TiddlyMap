{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/LinkEdgeTypeSubscriber.js"],"names":["LinkEdgeTypeSubscriber","allEdgeTypes","options","priority","edgeType","id","tObj","toWL","typeWL","toRefs","$tw","wiki","getTiddlerLinks","fields","title","length"],"mappings":";;;;;;;;;;;AAWA;;;;;;;;;;+eAXA;AACA;;;;;;;;;;AAYA;;;;;;;;IAQMA,sB;;;AAEJ;;;AAGA,kCAAYC,YAAZ,EAAwC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAAA,2IAChCD,YADgC,aAChBE,UAAU,EADM,IACCD,OADD;AAEvC;;AAED;;;;;;;8BAGUE,Q,EAAU;;AAElB,aAAOA,SAASC,EAAT,KAAgB,cAAvB;AAED;;AAED;;;;;;kCAGcC,I,EAAMC,I,EAAMC,M,EAAQ;;AAEhC,UAAIA,UAAU,CAACA,OAAO,cAAP,CAAf,EAAuC;AACrC;AACD;;AAED,UAAIC,SAASC,IAAIC,IAAJ,CAASC,eAAT,CAAyBN,KAAKO,MAAL,CAAYC,KAArC,CAAb;;AAEA,UAAI,CAACL,MAAD,IAAW,CAACA,OAAOM,MAAvB,EAA+B;AAC7B;AACD;;AAED,aAAO,EAAE,gBAAgBN,MAAlB,EAAP;AAED;;;;;;AAGH;;QAEST,sB,GAAAA,sB","file":"../../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/LinkEdgeTypeSubscriber.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/modules/edge-type-handler/body/link\ntype: application/javascript\nmodule-type: tmap.edgetypehandler\n\n@preserve\n\n\\*/\n\nimport AbstractRefEdgeTypeSubscriber from '$:/plugins/felixhayashi/tiddlymap/js/AbstractRefEdgeTypeSubscriber';\n\n/**\n * The LinkEdgeTypeSubscriber deals with connections that are stored inside\n * a tiddler' text field.\n *\n * Note: This subscriber only retrieves edges, however doesn't store or delete them.\n *\n * @see http://tiddlymap.org/#tw-body\n */\nclass LinkEdgeTypeSubscriber extends AbstractRefEdgeTypeSubscriber {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(allEdgeTypes, options = {}) {\n    super(allEdgeTypes, { priority: 20, ...options });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canHandle(edgeType) {\n\n    return edgeType.id === 'tw-body:link';\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReferences(tObj, toWL, typeWL) {\n\n    if (typeWL && !typeWL['tw-body:link']) {\n      return;\n    }\n\n    var toRefs = $tw.wiki.getTiddlerLinks(tObj.fields.title);\n\n    if (!toRefs || !toRefs.length) {\n      return;\n    }\n\n    return { 'tw-body:link': toRefs };\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport { LinkEdgeTypeSubscriber };\n"],"sourceRoot":"../../../../../../../src/plugins"}