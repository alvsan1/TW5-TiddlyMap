{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/EdgeTypeSubscriberRegistry.js"],"names":["EdgeTypeSubscriberRegistry","subscribers","allEdgeTypes","tracker","subscriberClasses","updateIndex","edgeType","allSubscribers","subscribersForType","i","l","length","canHandle","push","skipOthers","subscriberClass","moduleName","subscriber","setTracker","ignore","sort","s1","s2","priority"],"mappings":";;;;;;;;;;AAAA;AACA;;;;;;;;;;AAUA;;;;IAIMA,0B;;AAEJ;;;;;AAKA,sCAAYC,WAAZ,EAAyBC,YAAzB,EAAuCC,OAAvC,EAAgD;AAAA;;AAE9C,SAAKC,iBAAL,GAAyBH,WAAzB;AACA,SAAKE,OAAL,GAAeA,OAAf;;AAEA,SAAKE,WAAL,CAAiBH,YAAjB;AAED;;AAED;;;;;;;;;;kCAMcI,Q,EAAU;;AAEtB,UAAMC,iBAAiB,KAAKA,cAA5B;AACA,UAAMC,qBAAqB,EAA3B;;AAEA,WAAK,IAAIC,IAAI,CAAR,EAAWC,IAAIH,eAAeI,MAAnC,EAA2CF,IAAIC,CAA/C,EAAkDD,GAAlD,EAAuD;;AAErD,YAAIF,eAAeE,CAAf,EAAkBG,SAAlB,CAA4BN,QAA5B,CAAJ,EAA2C;;AAEzCE,6BAAmBK,IAAnB,CAAwBN,eAAeE,CAAf,CAAxB;;AAEA,cAAIF,eAAeE,CAAf,EAAkBK,UAAtB,EAAkC;AAChC;AACD;AACF;AACF;;AAED,aAAON,kBAAP;AAED;;AAED;;;;;;;;6BAKS;;AAEP,aAAO,KAAKD,cAAZ;AAED;;AAED;;;;;;;;;;;;gCASYL,Y,EAAc;;AAExB,UAAMK,iBAAiB,EAAvB;;AAEA;AACA,UAAMQ,kBAAkB,KAAKX,iBAA7B;AACA,WAAK,IAAIY,UAAT,IAAuBD,eAAvB,EAAwC;;AAEtC,YAAME,aAAa,IAAKF,gBAAgBC,UAAhB,CAAL,CAAkCd,YAAlC,CAAnB;AACAe,mBAAWC,UAAX,CAAsB,KAAKf,OAA3B;;AAEA;AACA,YAAIc,WAAWE,MAAX,KAAsB,IAA1B,EAAgC;AAC9B;AACD;;AAEDZ,uBAAeM,IAAf,CAAoBI,UAApB;AACD;;AAED;AACAV,qBAAea,IAAf,CAAoB,UAACC,EAAD,EAAKC,EAAL;AAAA,eAAYA,GAAGC,QAAH,GAAcF,GAAGE,QAA7B;AAAA,OAApB;;AAEA,WAAKhB,cAAL,GAAsBA,cAAtB;AAED;;;;;;AAGH;;kBAEeP,0B","file":"../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/EdgeTypeSubscriberRegistry.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/EdgeTypeSubscriberRegistry\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n\n/**\n * Registry to store and retrieve EdgeTypeSubcriber modules that are responsible\n * for handling the retrieval, insertion and deletion of EdgeType objects.\n */\nclass EdgeTypeSubscriberRegistry {\n\n  /**\n   * @param {AbstractEdgeTypeSubscriber[]} subscribers\n   * @param {EdgeType[]} allEdgeTypes\n   * @param {Tracker} tracker\n   */\n  constructor(subscribers, allEdgeTypes, tracker) {\n\n    this.subscriberClasses = subscribers;\n    this.tracker = tracker;\n\n    this.updateIndex(allEdgeTypes);\n\n  }\n\n  /**\n   * Gets all matching subscribers for a type.\n   *\n   * @param {EdgeType} edgeType\n   * @returns AbstractEdgeTypeSubscriber[]\n   */\n  getAllForType(edgeType) {\n\n    const allSubscribers = this.allSubscribers;\n    const subscribersForType = [];\n\n    for (let i = 0, l = allSubscribers.length; i < l; i++) {\n\n      if (allSubscribers[i].canHandle(edgeType)) {\n\n        subscribersForType.push(allSubscribers[i]);\n\n        if (allSubscribers[i].skipOthers) {\n          break;\n        }\n      }\n    }\n\n    return subscribersForType;\n\n  }\n\n  /**\n   * Gets all subscribers.\n   *\n   * @returns AbstractEdgeTypeSubscriber[]\n   */\n  getAll() {\n\n    return this.allSubscribers;\n\n  }\n\n  /**\n   * Indexes all subscribers. Moreover, subscribers get linked to the edge\n   * types that currently exist in the wiki.\n   *\n   * This method should be called everytime after an edge type is added or\n   * removed in the system.\n   *\n   * @param {EdgeType[]} allEdgeTypes\n   */\n  updateIndex(allEdgeTypes) {\n\n    const allSubscribers = [];\n\n    // instantiate and register all active subscriber modules\n    const subscriberClass = this.subscriberClasses;\n    for (let moduleName in subscriberClass) {\n\n      const subscriber = new (subscriberClass[moduleName])(allEdgeTypes);\n      subscriber.setTracker(this.tracker);\n\n      // ignore all subscribers that have their ignore flag set to false\n      if (subscriber.ignore === true) {\n        continue;\n      }\n\n      allSubscribers.push(subscriber);\n    }\n\n    // sort subscribers by priority\n    allSubscribers.sort((s1, s2) => s2.priority - s1.priority);\n\n    this.allSubscribers = allSubscribers;\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport default EdgeTypeSubscriberRegistry;\n"],"sourceRoot":"../../../../../../src/plugins"}